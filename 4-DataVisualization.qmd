---
title: 'Worksheet 4: Data Visualization'
author: "Cecilia Barnard"
date: "2025-03-31"
---

_This is the fourth in a series of worksheets for History 8500 at Clemson University. The goal of these worksheets is simple: practice, practice, practice. The worksheet introduces concepts and techniques and includes prompts for you to practice in this interactive document. When you are finished, you should change the author name (above), render your document to a pdf, and upload it to canvas. Don't forget to commit your changes as you go and push to github when you finish the worksheet._

## Charts and Graphs with `ggplot2()`

An essential element of working with data is trying to make sense of it and communicate your findings. Frequently, the way to do that is through some kind of data visualization. This week we are going to think about how to represent information graphically. How can we highlight patterns and trends in data in a way that helps ourselves and our readers/users understand historical data?

R has many visualization packages but the most powerful of those is `ggplot()` which builds on the concept of a grammar of graphics. To quote Hadley Wickham, "A grammar of graphics is a tool that enables us to concisely describe the components of a graphic. Such a grammar allows us to move beyond named graphics (e.g., the `scatterplot`) and gain insight into the deep structure that underlies statistical graphics." In other words, `ggplot()` provides a set of tools to map data to visual elements on a plot, to specify the type of plot, and to control the fine details of how that plot will be displayed. 

What does that mean in practice? 

Any type of plot in R has 3 necessary layers. 

**1) Data:** A data frame with one or more variables, each one with one or more observations. 

**2) Aesthetic:** A mapping of one or more variables to one or more visual elements on the graph. For example, you could map a variable to the x-axis, another variable to the y-axis, and a categorical variable to color so that different categories get plotted with different colors.

**3) Geometry:** The type or shape of the visual elements on the graph. For example, this could be a point in the case of a scatter plot, a bar in the case of a bar plot, or a line in the case of a line plot.

Lets load all the libraries we'll use in this worksheet: 
```{r message=FALSE, warning=FALSE}
library(gapminder) #this is a dataset
library(ggplot2) 
library(tidyverse)
library(DigitalMethodsData)

```
To begin, we're going to use one of R's built in datasets. First lets take a look at the data: 
```{r}
data(gapminder)
```

(@) Take a look at the data. What can you say about it? 

> The dataset contains life expectancy, population, and GDP per capita on 5 year intervals from 1952-2007. The dataset contains this information for every country, listed alphabetically. 

This data includes variables for life exptenency and per capita GDP. Lets say we want to plot these two variables against each other for all country-years within the dataset. First we have to tell `ggplot()` what our data is. 
```{r}
p <- ggplot(data = gapminder)
```

What happened here? A new variable, `p` was created but we didn't get a plot yet. That is because we've told `ggplot` what data we're going to use but we haven't mapped anything to a plot yet. We need to tell `ggplot` what variables in the data should be represented by which visual elements in the plot. We also haven't told it what kind of plot we want. 

Mappings in `ggplot` are defined using the `aes()` function like this: 
```{r}
p <- ggplot(data = gapminder, mapping = aes(x=gdpPercap, y=lifeExp))

```

In this code we gave `ggplot()` two arguments instead of one - data and mapping. This tells ggplot that we want the data about GDP to be mapped to the x-axis and data about life expectancy on the y-axis. The `mapping = aes()` argument is **linking variables in our data to things you will see on the plot**.

There are numerous types of aesthetic mappings. x and y values are the most common and obvious but we could also define things like color, shape, size, and line type (solid vs dashed etc.)

We can view the plot that we've created by calling the variable that we stored our plot in, `p`. What we get is an empty plot. You'll notice that ggplot has created both the x and y-axis for us but there are not points on our plot. That is because we need to add a layer to the plot that includes the data. `geom_point()` helps us do that. It takes the x and y values and plots them in a scatterplot. 

```{r}
p + geom_point()
```

To summarize what we did above, there were 3 steps we went through. First, tell `ggplot()` what our data is. Second, add `mapping = aes()` to map our variables to the plot. And, third, choose a geom. In this case our geom was `geom_point()` which created the points/data layer on our plot. A fourth step could have included adding a scale, legend, title or some other element to the graph. These are typically referred to as labs. 

(@) Modify the above plot so that the variables it draws on are life expectancy and population. Then, use a comment to annotate the code and mark each of the 3 parts described above.
```{r}
p <- ggplot(data = gapminder, mapping = aes(x = lifeExp, y = pop))
p + geom_point()
#ggplot(data = gapminder) tells ggplot what dataset to pull from-in this case the gapminder dataset. Mapping = aes(x=lifeExp, y=pop)tells ggplot to pull the variables of life expectancy and population and plot the first on the x axis and the second on the y axis. p + geom_point generates a scatterplot using life expectancy as the x axis and population as the y axis per variable p. 
```

We can make this plot even more complex. Adding another value, color, to `aes()` we can change the color of each dot to correspond to a year. We also might want to rename the x and y-axis so that the labels have a more useful description of the variable. We can do so using the labs function. 

```{r}
ggplot(data = gapminder, mapping = aes(x = gdpPercap, y=lifeExp, color=year)) + geom_point() + labs(x="GDP Per Capita", y="Life Expectency in Years", title="Life Expectency and Per Capita GDP by Year") 
```

(@) Using the same plot above, can you edit the code to add a trend line? (Hint: You'll need to add another geom)
```{r}
??geom
ggplot(data = gapminder, mapping = aes(x = gdpPercap, y=lifeExp, color=year)) + geom_point() + labs(x="GDP Per Capita", y="Life Expectency in Years", title="Life Expectency and Per Capita GDP by Year") + geom_smooth()

```


(@) The file below contains data about the population of cities in 1930 and their recreation expenditures. Can you create a scatter plot from this data? 
```{r}
rec <- read.csv(file = "https://raw.githubusercontent.com/regan008/DigitalMethodsData/main/raw/Recreation-Expenditures.csv")

p <-ggplot(data = rec, mapping = aes(x=city, y=total_expenditures, color=state))
p + geom_point()
#this doesn't really visualize the data in a meaningful way so I flipped x and y to see what happened

p <-ggplot(data = rec, mapping = aes(x=total_expenditures, y=city, color=state))
p + geom_point()

```

The `geom_point()` function allows us to create scatterplots but its not the only geom within `ggplot2()`.

### Histogram 

A histogram is a graph used to represent the frequency distribution of a few data points of one variable. Histograms often classify data into various “bins” or “range groups” and count how many data points belong to each of those bins.

```{r}
recreational.data <- read.csv("https://raw.githubusercontent.com/regan008/DigitalMethodsData/main/raw/Recreation-Expenditures.csv")

ggplot(recreational.data, aes(x = population)) +
  geom_histogram()
```

(@) Use the Boston Women's voters dataset to create a histogram of the age of voters. 
```{r}
library(DigitalMethodsData)
data(BostonWomenVoters)
ggplot(BostonWomenVoters, aes(x = Age)) + geom_histogram()
```

(@) By default, `geom_histogram()` is choosing the number of bins. Can you change the number of bins or the bin width? (Hint: How might you look up the options for this function?)
```{r}
??geom_histogram()
#binwidth?
ggplot(BostonWomenVoters, aes(x = Age)) + geom_histogram(bins = 30)
```

(@) Explain, what does changing the number of bins do? 

> Changing the number of bins changes the range of ages mapped in each bar on the histogram. 

### Barplots 

A barplot (or barchart) is one of the most common types of graphic. Whereas a histogram shows the number of entries in each "bin" - a bar chart shows the relationship between a numeric and a categorical variable. Each entity in the categorical variable is represented as a bar. The size of the bar represents its numeric value. 

```{r}
sc.rec <- recreational.data %>% group_by(state) %>% summarize(state.expenditures = sum(total_expenditures))
ggplot(sc.rec, aes(x = state, y = state.expenditures )) +
  geom_col()
```

(@) Using the `gayguides` data, create a bar chart that shows the number of locations in 1980 in South Carolina, Georgia, and North Carolina. 
```{r}
data("gayguides")
gglocations <- gayguides %>% group_by(state, city, Year) %>% summarize(count = n()) %>% filter(state == "GA" | state == "NC" | state == "SC") %>% filter(Year == 1980)
ggplot(gglocations, aes(x = state, y = count)) + geom_col() 
```

(@) Using the `gayguides` data, plot the number of religious institutions in each state.
```{r}
ggchurch <- gayguides %>% group_by(state, type) %>% filter(type == "Religious Institution") %>% summarize(count = n())
ggplot(ggchurch, aes(x = state, y = count, color = state)) + geom_col()
```

(@) Formulate a question based on a dataset of your choice. That question should be something that would be appropriately answered by a bar chart. What is the question you want to explore?

<#In the almshouse data, is there a specific month in which more people are admitted than any other month? Is there a month with less frequent admissions? Do admissions change by the season? How does this vary by year

(@) Now write the code to answer that question and use comments (`#`) to explain your thinking as you go.
```{r}
aamonth <- almshouse_admissions %>% group_by(Year.Admitted, Month.Admitted) %>% summarize(count = n()) #this will group by month, year, and count the total number of admissions
ggplot(aamonth, aes(x = Month.Admitted, y = Year.Admitted, color = count)) + geom_col()
#First I made the color the year admitted, and the bar chart made no sense. I swapped the color to indicate the count. It still looks really weird
aamonth <- almshouse_admissions %>% group_by(Month.Admitted) %>% summarize(count = n())
#I cut the year from the grouping-I think adding in year is too much data for a bar chart to effectively handle
ggplot(aamonth, aes(x = Month.Admitted, y = count)) + geom_col()
#this makes a usable bar chart: The least likely month for admission was January, and the most likely month for admission was November
```

### Line Charts

Line charts excel at demonstrating trends over time. 

```{r}
data(gayguides)
gg.byyear <- gayguides %>% group_by(Year) %>% summarize(count = n())
ggplot(gg.byyear, aes(x = Year, y = count)) +
  geom_line()
```

(@) Create a line chart that shows the number of religious institutions in the gay guides data over time.
```{r}
ggchurchovertime <- gayguides %>% group_by(Year) %>% filter(type == "Religious Institution") %>% summarize(count = n())
ggplot(ggchurchovertime, aes(x = Year, y = count)) + geom_line()
```

(@) In the gayguides data, danger or risk is indicated in several different ways. Sometimes it through the use of an amenity categorization of (HOT) or (AYOR) which meant that these locations were frequented by police and should be used at your own risk. Other times, locations were listed as "inquire locally" in either the description or address field. There are many reasons a location would have requested to have been listed this way. Many times, it was due to harassment and the location deemed it too dangerous to publicly list its location. Can you create a subset of the gay guides data about risk and then use it to create a chart about the usage of these indicators over time? 
```{r}
ggdangerindicators <- gayguides %>% group_by (Year, amenityfeatures, description, streetaddress) %>% filter(amenityfeatures == "(AYOR)" | amenityfeatures == "(HOT)"| description == "inquire locally" | streetaddress == "inquire locally") %>% summarize(count = n())

ggplot(ggdangerindicators, aes(x = Year, y = count)) + geom_line()
#this is a fascinating chart-did they stop using these keywords after the mid 70s, or did I code this incorrectly?
```


### Faceting
Unlike the previous exmaples, `facet_wrap` is not a geom.  It splits the chart window in several small parts (a grid), and displays a similar chart in each section. Each section usually shows the same graph for a specific group of the dataset. For example, remember the line chart above that graphed the number of locations in the `gayguides` data across each year? We can facet that by state to see the number of locations in each state in each year. 

```{r}
gg.byyear <- gayguides %>% filter(state == "SC" | state == "NC" | state == "GA") %>% group_by(state, Year) %>% summarize(count = n())

ggplot(gg.byyear, aes(x = Year, y = count)) +
  geom_line() + facet_wrap(~state)
```

(@) Using the state recreation data, can you create a chart that outlines the total expenditures in South Carolina by city?
```{r}
city.expenditures <-recreational.data %>% group_by(state, city, total_expenditures) %>% filter(state == "SC") %>% summarize(count = n())

ggplot(city.expenditures, aes(x = city, y = total_expenditures)) + geom_col(aes(group = '')) + facet_wrap(~city)
```

(@) Using the gayguides data can you select 5 types of locations and chart the number of each type between 1965 and 1980? 
```{r}
#Bars/Clubs, Theatre, Religious Institution, Baths, Organizations
gglocations <- gayguides %>% group_by(type, Year) %>% filter( Year == 1965:1980) %>% filter(type == "Bars/Clubs" | type == "Theatre" | type == "Religious Institution" | type == "Baths" | type == "Organizations") %>% summarize(count = n())
ggplot(gglocations, aes(x = count, y = Year)) + geom_line(aes(group = '')) + xlim(1, 250) + facet_wrap(~type)
#xlim and ylim can't be zero-it throws an error-but this seems to cut off my data. 
```

(@) Using this recreation dataset from last week, can you find the average number of volunteer and paid workers over time? 
```{r}
rec.workers <- read.csv("https://raw.githubusercontent.com/regan008/DigitalMethodsData/main/raw/RecreationData-Wide.csv")
rec.workersavg <- rec.workers %>% group_by(type_of_worker, X1930, X1935, X1940, X1945) %>% summarize(count = n()) 

```

### Practice
In the slots below use the datasets for class (or a dataset of your choice) to create a plot. The plot you create in each of these three examples should try to make some kind of historical observation. After you finish creating the plot, write a short paragraph that explains what kind of observation you were trying to make and what your plot demonstrates. 

(@) Plot 1
```{r}
data(almshouse_admissions)
yearandmonth <- almshouse_admissions %>% group_by(Year.Admitted, Month.Admitted, YearDischarged, MonthDischarged) %>% summarize(count = n())
ggplot(yearandmonth, aes(x = Month.Admitted, y = Year.Admitted)) + geom_col() + facet_wrap(~YearDischarged)
```

(@) Plot 1 explanation: 
>I wanted to see how monthly and yearly admissions changed over time. As th 19th century started and progessed and immigration increased, did almshouse use increase or decrease? According to the graphs, the first 5 or so years of the 19th century are when the almshouses are used most consistently and frequently. After 1804 almshouse use drops off almost entirely, which I find very interesting. Why did that happen? Did another almshouse open and surpass this one? Did the sytem of poor relief change dramatically?

(@) Plot 2
```{r}
data(gayguides)
UtahChangeOverTime <- gayguides %>% group_by(state, Year, type) %>% filter(state == "UT") %>% summarize(count = n())
ggplot(UtahChangeOverTime, aes(x = Year, y = count)) + geom_line() + facet_wrap(~type)
```

(@) Plot 2 explanation: 
>I wanted to see where and when queer people congregated in Utah, which is a very religious state. I was interested in seeing if Mormon beliefs, like an avoidance of alcohol, affected where and how queer people congregated. For example, were there fewer gay friendly bars in Utah than say religious institutions or bookstores? It seems as though Mormon avoidance of alcohol and premarital sex did not affect the lives of queer Utahns-Bars and cruising areas are the most frequent locations that appear, and increase over time from 1965 to 1985. Religious institutions also increase over time from 1975 to 1985: It would be interesting to examine primary sources or the archive to see if this correlates with an increased demonstration of tolerance toward queer people in the state.

(@) Plot 3. For this one, try a different kind of plot. [Check out a useful gallery here.](https://github.com/regan008/DigitalMethodsData/blob/main/raw/RecreationData-Wide.csv)
(For this week, avoid choosing a map. We'll talk more about maps and geographic data over the next two weeks.)
```{r}
data(BostonWomenVoters)
ageoccucorrelation <- BostonWomenVoters %>% group_by(Age, Occupation) %>% filter(Occupation == "Housewife" | Occupation == "School teacher" | Occupation == "Clerk" | Occupation == "Student") %>% filter(Age < 35) %>% summarize(count = n())
ggplot(ageoccucorrelation, aes(x = Occupation, y = count)) + geom_bar(stat = "identity") + facet_wrap(~Age)
```

(@) Plot 3 explanation: 
>This one took a lot of manipulating and consideration to create, but eventually I created a data representation that correlated age and occupation for women on the voting registry in Boston. I wanted to explore what occupations younger women sought out most frequently. I narrowed to 5 occupations so that the graph was readable, and shortened the age range to under 35. I'm not entirely happy with this graph-it feels very limited. The youngest age, 20, was unlikely to be employed at all. Overall, housewife is the most common occupation for women under 35, followed by Clerk. Women in their early 20s were more likely to be employed outside of the home-you could make the inference based on the graphs that the average age for marriage and leaving the workforce is around 22-24, because that is when "housewife" outpaces other employment. 
